
タスク
  z-test
  tesselation
    tes_eval(pn edges)
      normal
    tes_ctrl(edge length based)
  データ部分を分離

builder.bind_descriptor_sets

built-in variables
  https://www.khronos.org/opengl/wiki/Built-in_Variable_(GLSL)

vertex
tes_control
  EdgeLengthBasedTess
tes_eval
  PN Triangle
fragment
  zwrite
  normalだけで色を決定



vec3 vertices
vec3 normals
edges
  uint vertexIds[2]
  uint normalIds[2]
faces
  uint edgeId[3]

/* can be calculated by the faces, edges */
face_vertices  //index buffer


t2=0 のとき法線がv2, n12_2, n20_2に依存しない
t0=1-t2-t1 として
n = normalize(cross(dp_dt2, dp_dt1))

Cubic Bezier Triangle では無理
  4次(quartic)
  6次(hexic)になると制御点の描く3角形が3重になる


分配則
  dot(a, b+c) = dot(a, b) + dot(a, c)
  cross(a, b+c) = cross(a, b) + cross(a, c)
ベクトル三重積
  cross(a, cross(b,c)) = -dot(a,b)*c -dot(c,a)*b
cross(b-a, c-a)
  = +cross(b,c) +cross(c,a) +cross(a,b)
  = cross(c-b, a-b)
  = cross(a-c, b-c)

