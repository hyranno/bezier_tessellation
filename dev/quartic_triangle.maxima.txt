load("vect")$

/* Quartic Bezier Triangle */
t0 : 1-t2-t1$

/* constraints : edge normal at the corners */
/*
C1(v0, v1, n0, n1) := 1/4 * (4*v0 + K*((v1-v0)-n0*(v1-v0).n0)) $
C310 : C1(v0, v1, n01_0, n01_1)$
C130 : C1(v1, v0, n01_1, n01_0)$
C031 : C1(v1, v2, n12_1, n12_2)$
C013 : C1(v2, v1, n12_2, n12_1)$
C103 : C1(v2, v0, n20_2, n20_0)$
C301 : C1(v0, v2, n20_0, n20_2)$
*/

/* no constraints, just interpolate */
/*
Ci(v0, v1, c0, c1) := (v0+v1)/2 + Kc*((c0-v0) + (c1-v1))$
C220 : Ci(v0, v1, C310, C130)$
C022 : Ci(v1, v2, C031, C013)$
C202 : Ci(v2, v0, C103, C301)$
*/

p :
  +v0 *t0^4
  +v1 *t1^4
  +v2 *t2^4
  +4*C310 *t0^3* t1^1
  +6*C220 *t0^2 *t1^2
  +4*C130 *t0^1 *t1^3
  +4*C031 *t1^3* t2^1
  +6*C022 *t1^2 *t2^2
  +4*C013 *t1^1 *t2^3
  +4*C103 *t2^3* t0^1
  +6*C202 *t2^2 *t0^2
  +4*C301 *t2^1 *t0^3
  +12*C211 *t0^2 * t1^1 * t2^1
  +12*C121 *t0^1 * t1^2 * t2^1
  +12*C112 *t0^1 * t1^1 * t2^2
$


dp_dt1 : diff(p, t1)$
dp_dt2 : diff(p, t2)$


ev(dp_dt1, t2=0);
/*
+t0^3*(C310-v0)
-t1^3*(C130-v1)
+3*t0^2*t1*(C220-C310)
-3*t0*t1^2*(C220-C130)
*/
ev(dp_dt2, t2=0);
/*
+t0^3*(C301-v0)
-t1^3*((C130-v1) -(C031-v1))
+3*t0^2*t1*(C211-C310)
+3*t0*t1^2*(C121-C220)
*/
/*
vn01 :
  +t0^3* nf0
  +t1-3* nf1
  +Kn * t0^2*t1 *cross(C220-C310, C211-C310)
  +Kn * t0*t1^2 *cross(C220-C130, C121-C220)
$
*/
/* constraints: face normal on the edges */
/*
C211 : v0$
C121 : v1$
C112 : v2$
*/