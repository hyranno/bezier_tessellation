load("vect")$
declare(".", commutative)$
dotdistrib : true$
dotscrules : true$

norm(v) := sqrt(v.v)$
normalize(v) := v / norm(v)$
cross(v0, v1) := v0~v1$

quadratic_curve(c20, c11, c02, t0, t1) :=
    +c20 *t0 *t0
    +c11 *2 *t0 *t1
    +c02 *t1 *t1
$
cubic_curve(c30, c21, c12, c03, t0, t1) :=
    +c30 *t0 *t0 *t0
    +c21 *3 *t0 *t0 *t1
    +c12 *3 *t0 *t1 *t1
    +c03 *t1 *t1 *t1
$


p :
  +c300 *t0 *t0 *t0
  +c030 *t1 *t1 *t1
  +c003 *t2 *t2 *t2
  +c210 *3 *t0 *t0 *t1
  +c120 *3 *t0 *t1 *t1
  +c021 *3 *t1 *t1 *t2
  +c012 *3 *t1 *t2 *t2
  +c102 *3 *t2 *t2 *t0
  +c201 *3 *t2 *t0 *t0
  +c111 *6 *t0 * t1 * t2
$

dp_dt0 : ev(diff(ev(p, t1=(1-t0)*r12, t2=(1-t0)*r21), t0), r12=t1/(t1+t2), r21=t2/(t1+t2))$
dp_dt1 : diff(ev(p, t2=(1-t1)*r20, t0=(1-t1)*r02), t1)$
dp_dt2 : diff(ev(p, t0=(1-t2)*r01, t1=(1-t2)*r10), t2)$


ratsimp(dp_dt0, t0, t1, t2)$

is(radcan(
    dp_dt0
    =
    3*(
        +((c300-3*c201+3*c102-c003)*t0^2+2*(c201-2*c102+c003)*t0+(c102-c003))*t2^3
        +(3*(c300-c210+c102-c012-2*c201+2*c111)*t0^2+2*(c210+2*c201-2*c102+3*c012-4*c111)*t0+c102+2*c111-3*c012)*t1*t2^2
        +(3*(c300-c201+c120-c021-2*c210+2*c111)*t0^2+2*(c201+2*c210-2*c120+3*c021-4*c111)*t0+c120+2*c111-3*c021)*t1^2*t2
        +((c300-3*c210+3*c120-c030)*t0^2+2*(c210-2*c120+c030)*t0+(c120-c030))*t1^3
    ) /cubic_curve(1, 1, 1, 1, t1, t2)
));


/*
3*(
    +((c300-3*c201+3*c102-c003)*t0^2+2*(c201-2*c102+c003)*t0+(c102-c003))*t2^3
    +(3*(c300-c210+c102-c012-2*c201+2*c111)*t0^2+2*(c210+2*c201-2*c102+3*c012-4*c111)*t0+c102+2*c111-3*c012)*t1*t2^2
    +(3*(c300-c201+c120-c021-2*c210+2*c111)*t0^2+2*(c201+2*c210-2*c120+3*c021-4*c111)*t0+c120+2*c111-3*c021)*t1^2*t2
    +((c300-3*c210+3*c120-c030)*t0^2+2*(c210-2*c120+c030)*t0+(c120-c030))*t1^3
) /cubic_curve(1, 1, 1, 1, t1, t2)


*/

