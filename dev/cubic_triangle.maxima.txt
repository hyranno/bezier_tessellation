load("vect")$
declare(".", commutative)$
dotdistrib : true$
dotscrules : true$

norm(v) := sqrt(v.v)$
normalize(v) := v / norm(v)$
cross(v0, v1) := v0~v1$

quadratic_curve(c20, c11, c02, t0, t1) :=
    +c20 *t0 *t0
    +c11 *2 *t0 *t1
    +c02 *t1 *t1
$
cubic_curve(c30, c21, c12, c03, t0, t1) :=
    +c30 *t0 *t0 *t0
    +c21 *3 *t0 *t0 *t1
    +c12 *3 *t0 *t1 *t1
    +c03 *t1 *t1 *t1
$


p :
  +c300 *t0 *t0 *t0
  +c030 *t1 *t1 *t1
  +c003 *t2 *t2 *t2
  +c210 *3 *t0 *t0 *t1
  +c120 *3 *t0 *t1 *t1
  +c021 *3 *t1 *t1 *t2
  +c012 *3 *t1 *t2 *t2
  +c102 *3 *t2 *t2 *t0
  +c201 *3 *t2 *t0 *t0
  +c111 *6 *t0 * t1 * t2
$

dp_dt0_r : diff(ev(p, t1=(1-t0)*r12, t2=(1-t0)*r21), t0)$
dp_dt1_r : diff(ev(p, t2=(1-t1)*r20, t0=(1-t1)*r02), t1)$
dp_dt2_r : diff(ev(p, t0=(1-t2)*r01, t1=(1-t2)*r10), t2)$

dp_dt0 : ev(dp_dt0_r, r12=t1/(t1+t2), r21=t2/(t1+t2))$
dp_dt1 : ev(dp_dt1_r, r20=t2/(t2+t0), r02=t0/(t2+t0))$
dp_dt2 : ev(dp_dt2_r, r01=t0/(t0+t1), r10=t1/(t0+t1))$

ratsimp(dp_dt0, t0, t1, t2)$

is(radcan(
    dp_dt0
    =
    cubic_curve(
        quadratic_curve(c300-c210, c210-c120, c120-c030, t0, 1-t0),
        (
            +quadratic_curve(c300-c210, c210-c111, c111-c021, t0, 1-t0)
            +quadratic_curve(c300-c210, c210-c120, c120-c021, t0, 1-t0)
            +quadratic_curve(c300-c201, c201-c111, c111-c021, t0, 1-t0)
        )/3,
        (
            +quadratic_curve(c300-c201, c201-c111, c111-c012, t0, 1-t0)
            +quadratic_curve(c300-c201, c201-c102, c102-c012, t0, 1-t0)
            +quadratic_curve(c300-c210, c210-c111, c111-c012, t0, 1-t0)
        )/3,
        quadratic_curve(c300-c201, c201-c102, c102-c003, t0, 1-t0),
        t1, t2
    ) * 3/cubic_curve(1, 1, 1, 1, t1, t2)
));

is(radcan(
    dp_dt1
    =
    cubic_curve(
        quadratic_curve(c030-c021, c021-c012, c012-c003, t1, 1-t1),
        (
            +quadratic_curve(c030-c021, c021-c111, c111-c102, t1, 1-t1)
            +quadratic_curve(c030-c021, c021-c012, c012-c102, t1, 1-t1)
            +quadratic_curve(c030-c120, c120-c111, c111-c102, t1, 1-t1)
        )/3,
        (
            +quadratic_curve(c030-c120, c120-c111, c111-c201, t1, 1-t1)
            +quadratic_curve(c030-c120, c120-c210, c210-c201, t1, 1-t1)
            +quadratic_curve(c030-c021, c021-c111, c111-c201, t1, 1-t1)
        )/3,
        quadratic_curve(c030-c120, c120-c210, c210-c300, t1, 1-t1),
        t2, t0
    ) * 3/cubic_curve(1, 1, 1, 1, t2, t0)
));

is(radcan(
    dp_dt2
    =
    cubic_curve(
        quadratic_curve(c003-c102, c102-c201, c201-c300, t2, 1-t2),
        (
            +quadratic_curve(c003-c102, c102-c111, c111-c210, t2, 1-t2)
            +quadratic_curve(c003-c102, c102-c201, c201-c210, t2, 1-t2)
            +quadratic_curve(c003-c012, c012-c111, c111-c210, t2, 1-t2)
        )/3,
        (
            +quadratic_curve(c003-c012, c012-c111, c111-c120, t2, 1-t2)
            +quadratic_curve(c003-c012, c012-c021, c021-c120, t2, 1-t2)
            +quadratic_curve(c003-c102, c102-c111, c111-c120, t2, 1-t2)
        )/3,
        quadratic_curve(c003-c012, c012-c021, c021-c030, t2, 1-t2),
        t0, t1
    ) * 3/cubic_curve(1, 1, 1, 1, t0, t1)
));


